generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       String    @id @default(uuid())
  name     String
  projects Project[]
  skills   Skill[]
}

model Skill {
  id         String   @id @default(uuid())
  skillName  String
  categoryId String
  date       DateTime @default(now()) @db.Timestamp(6)
  level      Int      @default(50)
  category   Category @relation(fields: [categoryId], references: [id])
}

model Project {
  id               String   @id @default(uuid())
  projectName      String
  projectThumbnail String
  siteLink         String?
  codeLink         String?
  description      String?
  categoryId       String
  slug             String   @unique(map: "project_slug_idx") @default("")
  createdAt        DateTime @default(now()) @db.Timestamp(6)
  images           String[]
  publish          Boolean
  rate             Int
  category         Category @relation(fields: [categoryId], references: [id])
}

model ContactMessage {
  id          String   @id @default(uuid())
  senderName  String
  senderEmail String
  subject     String
  messageText String
  date        DateTime @default(now()) @db.Timestamp(6)
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  name          String    @default("NO_NAME")
  email         String    @unique(map: "user_email_idx")
  emailVerified DateTime? @db.Timestamp(6)
  password      String
  role          String    @default("user")
  image         String?
  createdAt     DateTime  @default(now()) @db.Timestamp(6)
  sessions      Session[]
}

model Session {
  sessionToken String   @id
  userId       String   @db.Uuid
  expires      DateTime @db.Timestamp(6)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
